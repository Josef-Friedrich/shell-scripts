#!/bin/sh

test_without_parameters() {
	assert_fail "../rsync-backup.sh"
}

test_help() {
	assert "../rsync-backup.sh -h"
}

test_execute() {
  TMP1=$(mktemp -d)
  TMP2=$(mktemp -d)
	source ../rsync-backup.sh

	assert "_execute -a $TMP1"
	assert "test -f $TMP1/.rsync-backup/please-sync"
	assert "_execute -a $TMP2"
	assert "test -f $TMP2/.rsync-backup/please-sync"
	echo lol > $TMP1/lol1
	echo lol > $TMP1/lol2

	_execute $TMP1 $TMP2 > /dev/null

	assert_equals "$SOURCE" "$TMP1"
	assert_equals "$DESTINATION" "$TMP2"
	assert_equals "$STAT_NUM_FILES" 3

	assert "test -f '$LOG_FILE_HOST'"

	assert "test -f '$TMP1/.rsync-backup/$LOG_FILE_HOST_NAME'"
	assert "test -f '$TMP2/.rsync-backup/$LOG_FILE_HOST_NAME'"

}

test_default_variables() {
	source ../rsync-backup.sh
	assert_equals "$LOG_FOLDER_HOST" "$HOME/rsync-backup-logs"
	assert_equals "$RSYNC_FOLDER" ".rsync-backup"
	assert_equals "$BACKUP_FOLDER" ".rsync-backup/backups"
	assert_equals "$TMP_FOLDER" "/tmp/.rsync-backup"
	assert_equals "$AFFIRMATION_FILE" "please-sync"
	assert_equals "$EXCLUDE_FILE" "excludes"
	assert_equals "$SEPARATOR" '################################################'
	assert_equals "$DEFAULT_EXCLUDES" '--exclude .rsync_shadow --exclude .snapshots'
}

test_function_process_source_destination() {
	source ../rsync-backup.sh
	SOURCE=$(mktemp -d)
	DESTINATION=$(mktemp -d)

	assert_equals "$(_process_source_destination)" "$SOURCE/ $DESTINATION/"
}

test_function_process_options() {
	source ../rsync-backup.sh

	assert_equals "$(_process_options)" "--recursive --links --perms --times --group --owner --verbose --delete --size-only --keep-dirlinks --partial --stats --exclude .rsync-backup/ --exclude .rsync_shadow --exclude .snapshots  "
}

test_function_trim_value() {
	source ../rsync-backup.sh

	assert_equals "$(_trim_value 1 2 3 4)" 1
	assert_equals "$(_trim_value 1,2,3,4)" 1234
}
